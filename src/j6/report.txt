学籍番号: 2210342
氏名: 鈴木謙太郎
---

# 問題1

## 1.1
式: (apple orange pear grapefruit)
解答: (car(cdr(cdr '(apple orange pear grapefruit))))
解答(合成): (caddr '(apple orange pear grapefruit))

## 1.2
式: ((apple orange) (pear grapefruit))
解答: (car(car(cdr '((apple orange) (pear grapefruit)))))
解答(合成): (caadr '((apple orange) (pear grapefruit)))

## 1.3
式: (((apple) (orange) (pear) (grapefruit)))
解答: (car(car(cdr(cdr(car '(((apple) (orange) (pear) (grapefruit))))))))
解答(合成): (car (caddar '(((apple) (orange) (pear) (grapefruit))))) ;PEARだけを含むリストを取り出すまでと、そこからPEARを取り出すまでを分けている

## 1.4
式: (apple (orange) ((pear)) (((grapefruit))))
解答: (car(car(car(cdr(cdr(car '((apple (orange) ((pear)) (((grapefruit)))))))))))
解答(合成): (caar (caddar '((apple (orange) ((pear)) (((grapefruit))))))) ;PEARだけを含むリストを取り出すまでと、そこからPEARを取り出すまでを分けている

## 1.5
式: ((((apple))) ((orange)) (pear) grapefruit)
解答: (car(car(cdr(cdr '((((apple))) ((orange)) (pear) grapefruit)))))
解答(合成): (car (caddr '((((apple))) ((orange)) (pear) grapefruit))) ;PEARだけを含むリストを取り出すまでと、そこからPEARを取り出すまでを分けている

## 1.6
式: ((((apple) orange) pear) grapefruit)
解答: (car(cdr(car '((((apple) orange) pear) grapefruit))))
解答(合成): (cadar '((((apple) orange) pear) grapefruit))

# 問題2

1行目でtoolsに['hammer', 'screwdriver']を代入している。
2行目でtoolsの先頭に'pliers'を追加しているが、consは非破壊的な操作であるため、3行目で出力させたtoolsの値は変わらない。
4行目では2行目と同じconsの結果をtoolsに再代入しているので、5行目では変更後のtoolsの値が出力される。

6行目以降のappendにおいても同様であり、これは非破壊的な操作であるため明示的にtoolsに結果を再代入しないとtoolsの値は変わらない。

```bash
[1]> (set 'tools (list 'hammer 'screwdriver))
(cons 'pliers tools)
tools
(set 'tools (cons 'pliers tools))
tools
(append '(saw wrench) tools)
tools
(set 'tools (append '(saw wrench) tools))
tools
(HAMMER SCREWDRIVER)
[2]>
(PLIERS HAMMER SCREWDRIVER)
[3]>
(HAMMER SCREWDRIVER)
[4]>
(PLIERS HAMMER SCREWDRIVER)
[5]>
(PLIERS HAMMER SCREWDRIVER)
[6]>
(SAW WRENCH PLIERS HAMMER SCREWDRIVER)
[7]>
(PLIERS HAMMER SCREWDRIVER)
[8]>
(SAW WRENCH PLIERS HAMMER SCREWDRIVER)
[9]>
(SAW WRENCH PLIERS HAMMER SCREWDRIVER)
```

# 問題3

lengthは引数に与えられたリストの直下の子要素を数える。
そのため、(plato socrates aristotle)は3つの要素を持つリストであるため、3が返される。
((plato) (socrates) (aristotle))は3つのリストを要素とするリストであるため、3が返される。
((plato socrates aristotle))は3つの要素を持つ1つのリストを要素とするリストであるため、1が返される。


```bash
[1]> (length '(plato socrates aristotle))
3
[2]> (length '((plato) (socrates) (aristotle)))
3
[3]> (length '((plato socrates aristotle)))
1
```

3行目のようなリストから3の出力を得たければ、次のようになるだろう。

```bash
[4]> (length (car '((plato socrates aristotle))))
3
```
