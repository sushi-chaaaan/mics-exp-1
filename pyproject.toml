[tool.poetry]
name = "num-cal"
version = "0.1.0"
description = ""
authors = ["sushi-chaaaan <mail@sushichan.live>"]

[tool.poetry.dependencies]
python = "^3.11"
numpy = "^1.23.3"
pandasai = "^1.5.15"
pygments = "^2.14.0"
sympy = "^1.11.1"

[tool.poetry.group.dev.dependencies]
japanize-matplotlib = "^1.1.3"
matplotlib = "^3.5.2"
ipykernel = "^6.19.4"
mypy = "^1.4.1"
poethepoet = "^0.20.0"
python-dotenv = "^1.0.0"
pre-commit = "^3.1.0"
ruff = "^0.1.7"
poetry-plugin-export = "^1.6.0"

[tool.ruff]
# https://qiita.com/yuji38kwmt/items/63e82126076204923520
target-version = "py311"
line-length = 125
extend-include = ["*.ipynb"]
ignore = [
    "E203",
    "D",
    "RUF001",  # 全角記号など`ambiguous unicode character`も使いたいため
    "RUF002",  # 全角記号など`ambiguous unicode character`も使いたいため
    "RUF003",  # 全角記号など`ambiguous unicode character`も使いたいため
    "PLC1901", # compare-to-empty-string : `if a == "`のように空文字列で直接比較したいときがあるため
    "ANN101",  # missing-type-self: 引数selfには型ヒントは付けていないため
    "ANN102",  # missing-type-cls: 引数clsには型ヒントは付けていないため
    "ERA",     # : 役立つこともあるが、コメントアウトしていないコードも警告されるので無視する
    "COM812",  # recommended by ruff formatter
    "ISC001",  # recommended by ruff formatter
    "UP040",   # discord.py can not understand new type syntax
]
select = ["ALL"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"


[tool.ruff.per-file-ignores]
"./src/app/**" = [
    "INP001", # add __init__.py to app directory is too much work
]
"/**/tests/**" = [
    "INP001", # add __init__.py to tests directory is too much work
    "S101",   # allow to use assert in tests
]


[tool.poe.tasks]
lint = "poetry run ruff check"
format = "poetry run ruff format ./src"
export = "poetry export -f requirements.txt -o requirements.txt --only main --without-hashes"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
